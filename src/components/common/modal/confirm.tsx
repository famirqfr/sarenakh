"use client";

import { useState, useEffect } from "react";
import { ReactNode } from "react";
import Modal from ".";
import Button from "@/components/ui/forms/button";
import Input from "@/components/ui/forms/input";

interface ConfirmModalProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  title?: string;
  description?: string | ReactNode;
  confirmText?: string;
  cancelText?: string;
  loading?: boolean;

  // ðŸŸ¡ Ø¬Ø¯ÛŒØ¯: ØªÙ†Ø¸ÛŒÙ…Ø§Øª Ø±Ù…Ø²
  requirePassword?: boolean;
  correctPassword?: string;
}

export default function ConfirmModal({
  isOpen,
  onClose,
  onConfirm,
  title = "ØªØ£ÛŒÛŒØ¯ Ø¹Ù…Ù„ÛŒØ§Øª",
  description = "Ø¢ÛŒØ§ Ø§Ø² Ø§Ù†Ø¬Ø§Ù… Ø§ÛŒÙ† Ø¹Ù…Ù„ÛŒØ§Øª Ù…Ø·Ù…Ø¦Ù† Ù‡Ø³ØªÛŒØ¯ØŸ",
  confirmText = "Ø¨Ù„Ù‡ØŒ Ø§Ù†Ø¬Ø§Ù… Ø¨Ø¯Ù‡",
  cancelText = "Ù„ØºÙˆ",
  loading = false,
  requirePassword = false,
  correctPassword = "",
}: ConfirmModalProps) {
  const [password, setPassword] = useState("");

  useEffect(() => {
    if (!isOpen) setPassword(""); 
  }, [isOpen]);

  const isPasswordValid =
    !requirePassword || password.trim() === correctPassword;

  return (
    <Modal isOpen={isOpen} onClose={onClose} title={title} size="sm">
      <div className="space-y-4">
        <p className="text-sm text-gray-700 dark:text-gray-300">
          {description}
        </p>

        {requirePassword && (
          <Input
            label="Ø±Ù…Ø² ØªØ£ÛŒÛŒØ¯"
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            placeholder="Ù…Ø«Ù„Ø§Ù‹: 123456"
          />
        )}

        <div className="flex justify-end gap-3 mt-6">
          <Button
            type="button"
            className="bg-red-600 hover:bg-red-700 text-white"
            onClick={onClose}
          >
            {cancelText}
          </Button>
          <Button
            type="button"
            className="bg-green-600 hover:bg-green-700 text-white"
            onClick={onConfirm}
            disable={loading || !isPasswordValid}
          >
            {loading ? "Ø¯Ø± Ø­Ø§Ù„ Ø§Ø¬Ø±Ø§..." : confirmText}
          </Button>
        </div>
      </div>
    </Modal>
  );
}
